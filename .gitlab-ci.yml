default:
  image: docker
  services:
    - docker:dind
  before_script:
    - docker info

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH/$CI_PROJECT_NAME:$CI_COMMIT_SHORT_SHA

stages:
  - build
  - deploy

build and push:
  stage: build
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

deploy:
  stage: deploy
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
    - ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} "docker pull $IMAGE_TAG"
    - ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} "docker stop $CI_PROJECT_NAME || true"
    - ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} "docker rm $CI_PROJECT_NAME || true"
    - >
        ssh -o StrictHostKeyChecking=no ${DEPLOY_USER}@${DEPLOY_SERVER} "docker run -d --restart always 
        --network=host 
        -e MISTER_LISTER_SQLITE_DB=$MISTER_LISTER_SQLITE_DB 
        -e MISTER_LISTER_TOKEN=$MISTER_LISTER_TOKEN 
        --volume /opt/$CI_PROJECT_NAME:/data:rw --name $CI_PROJECT_NAME $IMAGE_TAG"
